#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
	DFLAGS = -g -debug -d
else
	CFLAGS += -O2
	DFLAGS = -O -release -d
endif

build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp: 
	dh_testdir
	#ant -v
	$(MAKE) CFLAGS="$(CFLAGS)" DFLAGS="$(DFLAGS)"
	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp patch-stamp
	#ant -v clean
	[ ! -f Makefile ] || $(MAKE) clean
	rm -f tumiki-fighters
	rm -f `find . -name "*.o"`
	dh_clean 

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

# Build architecture-independent files here.
binary-indep: build install

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installchangelogs 
	dh_installdocs
	dh_installexamples
	dh_install
	dh_installmenu
	dh_installman debian/*.6
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

get-orig-source:
	dh_testdir
	dh_testroot
	wget http://www.asahi-net.or.jp/~cs8k-cyu/windows/tf0_2.zip
	unzip tf0_2.zip
	rm tf/*.dll
	rm tf/*.exe
	rm tf/lib/*.lib
	rm tf/resource/*.RES
	tar cvfz ../tumiki-fighters_0.2.dfsg1.orig.tar.gz tf
	rm -rf tf0_2.zip tf

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install patch get-orig-source
